/**
 * @file
 * @brief     Robot Arm class
 * @author    Jeroen van Hattem
 * @license   MIT
 */
#include "robot_arm.hpp"

void RobotArm::move(int coordinates[3], int _speed) {
    long startMsReceive = hwlib::now_us() / 1000;
    long startMsSend = hwlib::now_us() / 1000;

    // std::ostringstream g_code;
    // g_code << "G0 X" << (const char *)coordinates[0] << " Y" << (const char *)coordinates[1] << " Z" << (const char
    // *)coordinates[2]
    //        << " F" << (const char *)_speed << "\n ";

    // std::stringstream g_code_ss;
    // g_code_ss << "G0 X" << (const char *)coordinates[0] << " Y" << (const char *)coordinates[1] << " Z"
    //           << (const char *)coordinates[2] << " F" << (const char *)_speed << "\n ";

    for (unsigned int i = 0; i < 3; i++) {
        goto_coordinates[i] = coordinates[i];
    }

    // std::string result;
    // std::stringstream convert;
    // convert << "G0 X" << coordinates[0] << "\n ";
    // result = convert.str();

    // char *char_type = (char *)g_code.str().c_str();

    if ((hwlib::now_us() / 1000) - startMsSend > 2500) {
        // startMsSend = hwlib::now_us() / 1000;
        // conn << result.c_str();
        conn << "G0 X110 Y110 Z110 F10000\n";
        // conn << (g_code).str().c_str();
        // conn << "G0 X" << (const char *)coordinates[0] << " Y" << (const char *)coordinates[1] << " Z"
        //      << (const char *)coordinates[2] << " F" << (const char *)_speed << "\n ";
        // hwlib::cout << "Moving" << hwlib::endl;
    }

    if (conn.available() > 0 && (hwlib::now_us() / 1000) - startMsReceive > 30) {
        startMsReceive = hwlib::now_us() / 1000;

        for (unsigned int i = 0; i < conn.available(); i++) {
            hwlib::cout << (char)conn.receive();
        }
    }

    for (unsigned int i = 0; i < 3; i++) {
        current_coordinates[i] = goto_coordinates[i];
    }
    speed = _speed;
}

int RobotArm::getCoordinates(char dimension) {
    if (dimension == 'x') {
        return current_coordinates[0];
    } else if (dimension == 'y') {
        return current_coordinates[1];
    } else if (dimension == 'z') {
        return current_coordinates[2];
    }
    return 0;
}

int RobotArm::getSpeed() {
    return speed;
}